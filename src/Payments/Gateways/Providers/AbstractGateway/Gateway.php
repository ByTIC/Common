<?php

namespace ByTIC\Common\Payments\Gateways\Providers\AbstractGateway;

use ByTIC\Common\Payments\Gateways\Manager;
use ByTIC\Common\Payments\Gateways\Providers\AbstractGateway\Message\AbstractRequest;
use ByTIC\Common\Payments\Models\Purchase\Traits\IsPurchasableModelTrait;
use Nip\Utility\Traits\NameWorksTrait;
use Omnipay\Common\AbstractGateway;
use Symfony\Component\HttpFoundation\Request as HttpRequest;

/**
 * Class Gateway
 * @package ByTIC\Common\Payments\Gateways\Providers\AbstractGateway
 */
abstract class Gateway extends AbstractGateway
{

    use NameWorksTrait;

    /**
     * @var null|string
     */
    protected $name = null;

    /**
     * @var null|string
     */
    protected $label = null;

    /**
     * @var Manager
     */
    protected $manager;

    /**
     * @var Form
     */
    protected $form;

    /**
     * @return null|string
     */
    public function getName()
    {
        if ($this->name === null) {
            $this->initName();
        }

        return $this->name;
    }

    /**
     * @param null $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    public function initName()
    {
        $this->setName($this->generateName());
    }

    /**
     * @return string
     */
    protected function generateName()
    {
        return strtolower($this->getLabel());
    }

    /**
     * @return null|string
     */
    public function getLabel()
    {
        if ($this->label === null) {
            $this->initLabel();
        }

        return $this->label;
    }

    /**
     * @param null|string $label
     */
    public function setLabel($label)
    {
        $this->label = $label;
    }

    public function initLabel()
    {
        $this->setLabel($this->generateLabel());
    }

    /**
     * @return string
     */
    public function generateLabel()
    {
        return $this->getNamespaceParentFolder();
    }

    /**
     * @return Manager
     */
    public function getManager()
    {
        return $this->manager;
    }

    /**
     * @param Manager $manager
     */
    public function setManager($manager)
    {
        $this->manager = $manager;
    }

    /**
     * @param HttpRequest $httpRequest
     */
    public function setHttpRequest($httpRequest)
    {
        $this->httpRequest = $httpRequest;
    }

    /**
     * @return Form
     */
    public function getOptionsForm()
    {
        if (!$this->form) {
            $this->initOptionsForm();
        }

        return $this->form;
    }

    public function initOptionsForm()
    {
        $this->form = $this->newOptionsForm();
    }

    /**
     * @return Form
     */
    public function newOptionsForm()
    {
        $class = $this->getNamespacePath().'\Form';
        $form = new $class();
        /** @var Form $form */
        $form->setGateway($this);

        return $form;
    }

    /**
     * @param IsPurchasableModelTrait $record
     * @return AbstractRequest
     */
    public function purchaseFromModel($record)
    {
        $parameters = $record->getPurchaseParameters();

        return $this->purchase($parameters);
    }

    /**
     * @param $class
     * @param array $parameters
     * @return \Omnipay\Common\Message\AbstractRequest
     */
    protected function createNamepacedRequest($class, array $parameters)
    {
        $class = $this->getNamespacePath().'\Message\\'.$class;

        return $this->createRequest($class, $parameters); // TODO: Change the autogenerated stub
    }
}
